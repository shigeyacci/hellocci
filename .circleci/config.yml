version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
    steps:
      - checkout
      - run: mkdir test-reports
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      - run:
          name: Installing python packages
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - 'venv'
      - run:
          name: Running Flask app in the background
          command: |
            . venv/bin/activate
            python hello.py
          background: true
      - run:
          name: Running Test
          command: |
            . venv/bin/activate
            python test_hello.py
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/

  deploy:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
    steps:
      - checkout
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: heroku deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            fi
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build 
          filters:
            branches:
              only: master